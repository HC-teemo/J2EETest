<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 1.数据源：DriverManagerDataSource -->
    <bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/javaWebTest?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    </bean>

    <!-- 2.myBatis的SqlSession工厂:SqlSessionFactoryBean-->
    <!-- dataSource:数据源-->
    <!-- typeAliasesPackage:指定实体类包名-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds"/>
        <!--xml映射文件位置-->
        <property name="mapperLocations" value="classpath*:*Mapper.xml"/>
        <property name="typeAliasesPackage" value="com.huchuan.model"/>
    </bean>

    <!-- 3). mybatis 自动扫描加载Sql 映射文件/接口 : MapperScannerConfigurer -->
    <!-- basePackage 指定sql映射文件/接口所在的包(自动扫描) -->
    <!-- 这种方式就是需要将接口以及映射文件都放到同一个目录下,而如果想分离开,也可以采用SqlSessionFactory中那种方式, 也就是加载一个配置文件,通过配置文件的方式管理映射文件以及接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.huchuan.mapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <!-- 4). 事务管理 : DataSourceTransactionManager -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ds" />
    </bean>

    <!-- 5). 使用声明式事务 -->
    <!-- 定义一个事务管理还不够,还需要将他声明出来,才可以使用 -->
    <!-- 也可以使用面向切面,将固定的一些方法使用这个事务,而别的方法使用别的事务方式 -->
    <tx:annotation-driven transaction-manager="txManager" />

    <!-- 6).定义Mapper接口 -->
    <bean id="movieMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.huchuan.mapper.MovieMapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <!-- 7-1).定义持久化Service服务层 -->
    <bean id="persistService" class="com.huchuan.service.PersistService" />

    <!-- 7-2).定义查询Service服务层 -->
    <bean id="selectService" class="com.huchuan.service.SelectService" />

</beans>